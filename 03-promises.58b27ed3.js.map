{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC5BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAS,C,SAACH,E,MAAUC,IAEpBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAhCAO,SAASC,cAAe,QAChCC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAAaF,EAAIG,OAAOC,SAASd,MACjCe,EAAYL,EAAIG,OAAOC,SAASE,KAChCC,EAAcP,EAAIG,OAAOC,SAASI,OAElCC,EAAQC,OAAOR,EAAWS,OAC1BL,EAAOI,OAAOL,EAAUM,OACxBH,EAAQE,OAAOH,EAAYI,OAEjC,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,IAC3BxB,EAAcwB,EAAGH,GAAQG,EAAI,GAAKN,GACjCO,MAAK,EAACxB,SAACA,EAAQC,MAAEA,MAChBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,wBAAsB3B,QAAiBC,OAAW,IAE3E2B,OAAO,EAAC5B,SAACA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,OAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector ('form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(evt) {\n  evt.preventDefault();\n  const delayInput = evt.target.elements.delay;\n  const stepInput = evt.target.elements.step;\n  const amountInput = evt.target.elements.amount;\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount= Number(amountInput.value);\n\n  for (let i = 1; i <= amount; i++){\n    createPromise(i, delay +(i - 1) * step)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise  ${position} in ${delay} ms`);\n    })\n    .catch (({position, delay}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n    })\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if(shouldResolve){\n        resolve ({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  })\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","evt","preventDefault","delayInput","target","elements","stepInput","step","amountInput","amount","delay1","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.58b27ed3.js.map"}